<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="eclipse_pmd"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>PMD Plugin preferences rule set</description>
	<rule ref="rulesets/java/optimizations.xml/AddEmptyString" />
	<rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops" />
	<rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize" />
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE" />
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace" />
	<rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException" />
	<rule ref="rulesets/java/strings.xml/AvoidStringBufferField" />
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation" />
	<rule ref="rulesets/java/basic.xml/BooleanInstantiation">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BrokenNullCheck" />
	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray" />
	<rule ref="rulesets/java/naming.xml/ClassNamingConventions">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable" />
	<rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException" />
	<rule ref="rulesets/java/design.xml/CloseResource" />
	<rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
	<rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt" />
	<rule ref="rulesets/java/imports.xml/DontImportJavaLang" />
	<rule ref="rulesets/java/controversial.xml/DontImportSun" />
	<rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/EmptyFinalizer" />
	<rule ref="rulesets/java/empty.xml/EmptyFinallyBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyIfStmt">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyStaticInitializer" />
	<rule ref="rulesets/java/empty.xml/EmptySwitchStatements" />
	<rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyTryBlock" />
	<rule ref="rulesets/java/empty.xml/EmptyWhileStmt">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/EqualsNull">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl" />
	<rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded" />
	<rule ref="rulesets/ecmascript/braces.xml/ForLoopsMustUseBraces" />
	<rule ref="rulesets/java/design.xml/IdempotentOperations" />
	<rule ref="rulesets/ecmascript/braces.xml/IfElseStmtsMustUseBraces" />
	<rule ref="rulesets/ecmascript/braces.xml/IfStmtsMustUseBraces" />
	<rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck" />
	<rule ref="rulesets/java/strings.xml/InefficientStringBuffering" />
	<rule ref="rulesets/java/design.xml/InstantiationToGetClass">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration" />
	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation" />
	<rule ref="rulesets/java/coupling.xml/LooseCoupling" />
	<rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" />
	<rule ref="rulesets/java/basic.xml/MisplacedNullCheck">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/PreserveStackTrace" />
	<rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator" />
	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap" />
	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList" />
	<rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException" />
	<rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions" />
	<rule ref="rulesets/java/design.xml/SimplifyConditional" />
	<rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringInstantiation">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringToString" />
	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" />
	<rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName" />
	<rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName" />
	<rule ref="rulesets/java/logging-java.xml/SystemPrintln">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter" />
	<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable" />
	<rule ref="rulesets/java/unusedcode.xml/UnusedModifier">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UnusedNullCheckInEquals" />
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField" />
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod" />
	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector" />
	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList" />
	<rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging" />
	<rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings" />
	<rule ref="rulesets/java/strings.xml/UseIndexOfChar" />
	<rule ref="rulesets/java/strings.xml/UseStringBufferLength">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UselessOperationOnImmutable">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UselessOverridingMethod" />
	<rule ref="rulesets/java/strings.xml/UselessStringValueOf">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces" />
</ruleset>